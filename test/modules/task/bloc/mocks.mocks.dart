// Mocks generated by Mockito 5.0.16 from annotations
// in oshin_list/test/test_util/mocks.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:task_repository/src/data_provider/data_provider.dart' as _i3;
import 'package:task_repository/src/models/models.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTaskList_0 extends _i1.Fake implements _i2.TaskList {}

class _FakeTask_1 extends _i1.Fake implements _i2.Task {}

/// A class which mocks [TaskDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskDataProvider extends _i1.Mock implements _i3.TaskDataProvider {
  MockTaskDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.TaskList> getAll({bool Function(_i2.Task)? where}) =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
              returnValue: Future<_i2.TaskList>.value(_FakeTaskList_0()))
          as _i4.Future<_i2.TaskList>);
  @override
  _i4.Future<void> delete(String? id) =>
      (super.noSuchMethod(Invocation.method(#delete, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<_i2.Task> create(_i2.Task? task) =>
      (super.noSuchMethod(Invocation.method(#create, [task]),
              returnValue: Future<_i2.Task>.value(_FakeTask_1()))
          as _i4.Future<_i2.Task>);
  @override
  _i4.Future<_i2.Task> update(_i2.Task? task) =>
      (super.noSuchMethod(Invocation.method(#update, [task]),
              returnValue: Future<_i2.Task>.value(_FakeTask_1()))
          as _i4.Future<_i2.Task>);
  @override
  String toString() => super.toString();
}
